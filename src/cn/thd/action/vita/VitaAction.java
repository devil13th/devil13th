package cn.thd.action.vita;


import java.util.List;

import javax.annotation.Resource;

import cn.thd.pojo.vita.VitaEduHis;
import cn.thd.pojo.vita.VitaInfo;
import cn.thd.pojo.vita.VitaProjectDuty;
import cn.thd.pojo.vita.VitaProjectHis;
import cn.thd.pojo.vita.VitaProjectTec;
import cn.thd.pojo.vita.VitaTechnical;
import cn.thd.pojo.vita.VitaWorkHis;
import cn.thd.service.vita.VitaService;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.thd.core.action.PubAction;


/**
 * 简历信息相关
 * file autogenerated by ThirdteenDevils's CodeGenUtil 
 */
public class VitaAction extends PubAction {
	
	@Resource
	private VitaService vitaService;
	
	private VitaInfo  vitaInfo = new VitaInfo();
	private VitaEduHis  vitaEduHis = new VitaEduHis();
	private VitaProjectDuty  vitaProjectDuty = new VitaProjectDuty();
	private VitaProjectHis  vitaProjectHis = new VitaProjectHis();
	private VitaProjectTec  vitaProjectTec = new VitaProjectTec();
	private VitaTechnical  vitaTechnical = new VitaTechnical();
	private VitaWorkHis  vitaWorkHis = new VitaWorkHis();
	
	
	/**
	 *  简历信息列表展示界面
	 *  url:/vita/vita!vitaInfoList.do
	 */
	public String vitaInfoList(){
		try{
			this.logger.info("vitaInfoList()");
			this.setForwardPage("/pages/vita/vitaInfoList.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * ajax获取简历信息列表数据
	 * url:/vita/vita!vitaInfoListGetDate.do
	 */
	public String vitaInfoListGetDate(){
		try{
			this.logger.info("vitaInfoListGetDate()");
			
			StringBuffer json = new StringBuffer();
			GsonBuilder builder = new GsonBuilder();
			//Gson gson = builder.setDateFormat("yyyy-MM-dd HH:mm:ss").create();
			Gson gson = builder.setDateFormat("yyyy-MM-dd").create();
			map.put("VITA_ID", this.getReq().getParameter("VITA_ID"));
			
			//
			map.put("USER_ID", this.getReq().getParameter("USER_ID"));
			//
			map.put("VITA_NAME", this.getReq().getParameter("VITA_NAME"));
			//
			map.put("SEX", this.getReq().getParameter("SEX"));
			//
			map.put("BIRTHDAY", this.getReq().getParameter("BIRTHDAY"));
			//
			map.put("PHOTO", this.getReq().getParameter("PHOTO"));
			//
			map.put("EDU", this.getReq().getParameter("EDU"));
			//
			map.put("TEL", this.getReq().getParameter("TEL"));
			//
			map.put("INTERDUCE", this.getReq().getParameter("INTERDUCE"));
			//
			map.put("IS_VALID", this.getReq().getParameter("IS_VALID"));
			//
			map.put("PRE_PAY", this.getReq().getParameter("PRE_PAY"));
			//
			map.put("CREATE_TIME", this.getReq().getParameter("CREATE_TIME"));
			
			//排序
			map.put("sort",getReq().getParameter("sort"));	
			map.put("order",getReq().getParameter("order"));	
			
			List l = this.vitaService.queryVitaInfo(this.map, this.p);
			
			String listStr = gson.toJson(l);
			json.append("{\"total\":" + p.getListSize() + ",\"rows\":");
			if(l==null || l.size() < 1){
				listStr = "[]";
			}
			json.append(listStr);
			json.append("}");
			
			this.setMsg(json.toString());
			return "ajax";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}

	/**
	 * 保存或更新简历信息提交操作
	 * url:/vita/vita!vitaInfoFormSubmit.do
	 */
	public String vitaInfoFormSubmit(){
		try{
			this.logger.info("vitaInfoEditSubmit()");
			if("save".equals(this.getOperate())){
				this.vitaService.saveVitaInfo(this.vitaInfo);
			}else{
				this.vitaService.updateVitaInfo(this.vitaInfo);
			}			
			this.setScriptContent("alert('操作成功');getParent().reloadVitaInfoDg();window.close()");
			return "msg";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * 新增/编辑简历信息界面
	 * url:/vita/vita!vitaInfoForm.do
	 */
	public String vitaInfoForm(){
		try{
			this.logger.info("vitaInfoForm()");
			if(this.vitaInfo.getVitaId()!=null){
				vitaInfo = this.vitaService.queryVitaInfoById(vitaInfo.getVitaId());				
				this.setOperate("update");
			}else{
				this.setOperate("save");
			}
			this.setForwardPage("/pages/vita/vitaInfoForm.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	
	/**
	 * 删除单个简历信息对象操作
	 * url:/vita/vita!deleteVitaInfoById.do?vitaInfo.vitaId=xxx
	 */
	public String deleteVitaInfoById(){
		try{
			this.logger.info("deleteVitaInfoById()");
			this.vitaService.deleteVitaInfoById(vitaInfo.getVitaId());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	
	/**
	 *  教育经历列表展示界面
	 *  url:/vita/vita!vitaEduHisList.do
	 */
	public String vitaEduHisList(){
		try{
			this.logger.info("vitaEduHisList()");
			this.setForwardPage("/pages/vita/vitaEduHisList.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * ajax获取教育经历列表数据
	 * url:/vita/vita!vitaEduHisListGetDate.do
	 */
	public String vitaEduHisListGetDate(){
		try{
			this.logger.info("vitaEduHisListGetDate()");
			
			StringBuffer json = new StringBuffer();
			GsonBuilder builder = new GsonBuilder();
			//Gson gson = builder.setDateFormat("yyyy-MM-dd HH:mm:ss").create();
			Gson gson = builder.setDateFormat("yyyy-MM-dd").create();
			map.put("EDU_HIS_ID", this.getReq().getParameter("EDU_HIS_ID"));
			
			//
			map.put("VITA_ID", this.getReq().getParameter("VITA_ID"));
			//
			map.put("SCHOOL_NAME", this.getReq().getParameter("SCHOOL_NAME"));
			//
			map.put("BEGIN_DATE", this.getReq().getParameter("BEGIN_DATE"));
			//
			map.put("FINISH_DATE", this.getReq().getParameter("FINISH_DATE"));
			//
			map.put("EDU_LEVEL", this.getReq().getParameter("EDU_LEVEL"));
			//
			map.put("IS_VALID", this.getReq().getParameter("IS_VALID"));
			//
			map.put("CREATE_TIME", this.getReq().getParameter("CREATE_TIME"));
			
			//排序
			map.put("sort",getReq().getParameter("sort"));	
			map.put("order",getReq().getParameter("order"));	
			
			List l = this.vitaService.queryVitaEduHis(this.map, this.p);
			
			String listStr = gson.toJson(l);
			json.append("{\"total\":" + p.getListSize() + ",\"rows\":");
			if(l==null || l.size() < 1){
				listStr = "[]";
			}
			json.append(listStr);
			json.append("}");
			
			this.setMsg(json.toString());
			return "ajax";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}

	/**
	 * 保存或更新教育经历提交操作
	 * url:/vita/vita!vitaEduHisFormSubmit.do
	 */
	public String vitaEduHisFormSubmit(){
		try{
			this.logger.info("vitaEduHisEditSubmit()");
			if("save".equals(this.getOperate())){
				this.vitaService.saveVitaEduHis(this.vitaEduHis);
			}else{
				this.vitaService.updateVitaEduHis(this.vitaEduHis);
			}			
			this.setScriptContent("alert('操作成功');getParent().reloadVitaEduHisDg();window.close()");
			return "msg";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * 新增/编辑教育经历界面
	 * url:/vita/vita!vitaEduHisForm.do
	 */
	public String vitaEduHisForm(){
		try{
			this.logger.info("vitaEduHisForm()");
			if(this.vitaEduHis.getEduHisId()!=null){
				vitaEduHis = this.vitaService.queryVitaEduHisById(vitaEduHis.getEduHisId());				
				this.setOperate("update");
			}else{
				this.setOperate("save");
			}
			this.setForwardPage("/pages/vita/vitaEduHisForm.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	
	/**
	 * 删除单个教育经历对象操作
	 * url:/vita/vita!deleteVitaEduHisById.do?vitaEduHis.eduHisId=xxx
	 */
	public String deleteVitaEduHisById(){
		try{
			this.logger.info("deleteVitaEduHisById()");
			this.vitaService.deleteVitaEduHisById(vitaEduHis.getEduHisId());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 *  项目经历列表展示界面
	 *  url:/vita/vita!vitaProjectDutyList.do
	 */
	public String vitaProjectDutyList(){
		try{
			this.logger.info("vitaProjectDutyList()");
			this.setForwardPage("/pages/vita/vitaProjectDutyList.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * ajax获取项目经历列表数据
	 * url:/vita/vita!vitaProjectDutyListGetDate.do
	 */
	public String vitaProjectDutyListGetDate(){
		try{
			this.logger.info("vitaProjectDutyListGetDate()");
			
			StringBuffer json = new StringBuffer();
			GsonBuilder builder = new GsonBuilder();
			//Gson gson = builder.setDateFormat("yyyy-MM-dd HH:mm:ss").create();
			Gson gson = builder.setDateFormat("yyyy-MM-dd").create();
			map.put("DUTY_ID", this.getReq().getParameter("DUTY_ID"));
			
			//
			map.put("PROJECT_HIS_ID", this.getReq().getParameter("PROJECT_HIS_ID"));
			//
			map.put("DUTY_DESC", this.getReq().getParameter("DUTY_DESC"));
			//
			map.put("IS_VALID", this.getReq().getParameter("IS_VALID"));
			//
			map.put("CREATE_TIME", this.getReq().getParameter("CREATE_TIME"));
			
			//排序
			map.put("sort",getReq().getParameter("sort"));	
			map.put("order",getReq().getParameter("order"));	
			
			List l = this.vitaService.queryVitaProjectDuty(this.map, this.p);
			
			String listStr = gson.toJson(l);
			json.append("{\"total\":" + p.getListSize() + ",\"rows\":");
			if(l==null || l.size() < 1){
				listStr = "[]";
			}
			json.append(listStr);
			json.append("}");
			
			this.setMsg(json.toString());
			return "ajax";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}

	/**
	 * 保存或更新项目经历提交操作
	 * url:/vita/vita!vitaProjectDutyFormSubmit.do
	 */
	public String vitaProjectDutyFormSubmit(){
		try{
			this.logger.info("vitaProjectDutyEditSubmit()");
			if("save".equals(this.getOperate())){
				this.vitaService.saveVitaProjectDuty(this.vitaProjectDuty);
			}else{
				this.vitaService.updateVitaProjectDuty(this.vitaProjectDuty);
			}			
			this.setScriptContent("alert('操作成功');getParent().reloadVitaProjectDutyDg();window.close()");
			return "msg";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * 新增/编辑项目经历界面
	 * url:/vita/vita!vitaProjectDutyForm.do
	 */
	public String vitaProjectDutyForm(){
		try{
			this.logger.info("vitaProjectDutyForm()");
			if(this.vitaProjectDuty.getDutyId()!=null){
				vitaProjectDuty = this.vitaService.queryVitaProjectDutyById(vitaProjectDuty.getDutyId());				
				this.setOperate("update");
			}else{
				this.setOperate("save");
			}
			this.setForwardPage("/pages/vita/vitaProjectDutyForm.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	
	/**
	 * 删除单个项目经历对象操作
	 * url:/vita/vita!deleteVitaProjectDutyById.do?vitaProjectDuty.dutyId=xxx
	 */
	public String deleteVitaProjectDutyById(){
		try{
			this.logger.info("deleteVitaProjectDutyById()");
			this.vitaService.deleteVitaProjectDutyById(vitaProjectDuty.getDutyId());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 *  项目经历列表展示界面
	 *  url:/vita/vita!vitaProjectHisList.do
	 */
	public String vitaProjectHisList(){
		try{
			this.logger.info("vitaProjectHisList()");
			this.setForwardPage("/pages/vita/vitaProjectHisList.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * ajax获取项目经历列表数据
	 * url:/vita/vita!vitaProjectHisListGetDate.do
	 */
	public String vitaProjectHisListGetDate(){
		try{
			this.logger.info("vitaProjectHisListGetDate()");
			
			StringBuffer json = new StringBuffer();
			GsonBuilder builder = new GsonBuilder();
			//Gson gson = builder.setDateFormat("yyyy-MM-dd HH:mm:ss").create();
			Gson gson = builder.setDateFormat("yyyy-MM-dd").create();
			map.put("PROJECT_HIS_ID", this.getReq().getParameter("PROJECT_HIS_ID"));
			
			//
			map.put("WORK_HIS_ID", this.getReq().getParameter("WORK_HIS_ID"));
			//
			map.put("PROJECT_NAME", this.getReq().getParameter("PROJECT_NAME"));
			//
			map.put("POSITION", this.getReq().getParameter("POSITION"));
			//
			map.put("DUTY", this.getReq().getParameter("DUTY"));
			//
			map.put("BEGIN_DATE", this.getReq().getParameter("BEGIN_DATE"));
			//
			map.put("FINISH_DATE", this.getReq().getParameter("FINISH_DATE"));
			//
			map.put("PROJECT_DESC", this.getReq().getParameter("PROJECT_DESC"));
			//
			map.put("IS_VALID", this.getReq().getParameter("IS_VALID"));
			//
			map.put("CREATE_TIME", this.getReq().getParameter("CREATE_TIME"));
			
			//排序
			map.put("sort",getReq().getParameter("sort"));	
			map.put("order",getReq().getParameter("order"));	
			
			List l = this.vitaService.queryVitaProjectHis(this.map, this.p);
			
			String listStr = gson.toJson(l);
			json.append("{\"total\":" + p.getListSize() + ",\"rows\":");
			if(l==null || l.size() < 1){
				listStr = "[]";
			}
			json.append(listStr);
			json.append("}");
			
			this.setMsg(json.toString());
			return "ajax";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}

	/**
	 * 保存或更新项目经历提交操作
	 * url:/vita/vita!vitaProjectHisFormSubmit.do
	 */
	public String vitaProjectHisFormSubmit(){
		try{
			this.logger.info("vitaProjectHisEditSubmit()");
			if("save".equals(this.getOperate())){
				this.vitaService.saveVitaProjectHis(this.vitaProjectHis);
			}else{
				this.vitaService.updateVitaProjectHis(this.vitaProjectHis);
			}			
			this.setScriptContent("alert('操作成功');getParent().reloadVitaProjectHisDg();window.close()");
			return "msg";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * 新增/编辑项目经历界面
	 * url:/vita/vita!vitaProjectHisForm.do
	 */
	public String vitaProjectHisForm(){
		try{
			this.logger.info("vitaProjectHisForm()");
			if(this.vitaProjectHis.getProjectHisId()!=null){
				vitaProjectHis = this.vitaService.queryVitaProjectHisById(vitaProjectHis.getProjectHisId());				
				this.setOperate("update");
			}else{
				this.setOperate("save");
			}
			this.setForwardPage("/pages/vita/vitaProjectHisForm.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	
	/**
	 * 删除单个项目经历对象操作
	 * url:/vita/vita!deleteVitaProjectHisById.do?vitaProjectHis.projectHisId=xxx
	 */
	public String deleteVitaProjectHisById(){
		try{
			this.logger.info("deleteVitaProjectHisById()");
			this.vitaService.deleteVitaProjectHisById(vitaProjectHis.getProjectHisId());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 *  项目包含技术列表展示界面
	 *  url:/vita/vita!vitaProjectTecList.do
	 */
	public String vitaProjectTecList(){
		try{
			this.logger.info("vitaProjectTecList()");
			this.setForwardPage("/pages/vita/vitaProjectTecList.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * ajax获取项目包含技术列表数据
	 * url:/vita/vita!vitaProjectTecListGetDate.do
	 */
	public String vitaProjectTecListGetDate(){
		try{
			this.logger.info("vitaProjectTecListGetDate()");
			
			StringBuffer json = new StringBuffer();
			GsonBuilder builder = new GsonBuilder();
			//Gson gson = builder.setDateFormat("yyyy-MM-dd HH:mm:ss").create();
			Gson gson = builder.setDateFormat("yyyy-MM-dd").create();
			map.put("PROJECT_TEC_ID", this.getReq().getParameter("PROJECT_TEC_ID"));
			
			//
			map.put("PROJECT_HIS_ID", this.getReq().getParameter("PROJECT_HIS_ID"));
			//
			map.put("TEC_NAME", this.getReq().getParameter("TEC_NAME"));
			//
			map.put("TEC_CLASSIFY", this.getReq().getParameter("TEC_CLASSIFY"));
			//
			map.put("IS_VALID", this.getReq().getParameter("IS_VALID"));
			//
			map.put("CREATE_TIME", this.getReq().getParameter("CREATE_TIME"));
			
			//排序
			map.put("sort",getReq().getParameter("sort"));	
			map.put("order",getReq().getParameter("order"));	
			
			List l = this.vitaService.queryVitaProjectTec(this.map, this.p);
			
			String listStr = gson.toJson(l);
			json.append("{\"total\":" + p.getListSize() + ",\"rows\":");
			if(l==null || l.size() < 1){
				listStr = "[]";
			}
			json.append(listStr);
			json.append("}");
			
			this.setMsg(json.toString());
			return "ajax";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}

	/**
	 * 保存或更新项目包含技术提交操作
	 * url:/vita/vita!vitaProjectTecFormSubmit.do
	 */
	public String vitaProjectTecFormSubmit(){
		try{
			this.logger.info("vitaProjectTecEditSubmit()");
			if("save".equals(this.getOperate())){
				this.vitaService.saveVitaProjectTec(this.vitaProjectTec);
			}else{
				this.vitaService.updateVitaProjectTec(this.vitaProjectTec);
			}			
			this.setScriptContent("alert('操作成功');getParent().reloadVitaProjectTecDg();window.close()");
			return "msg";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * 新增/编辑项目包含技术界面
	 * url:/vita/vita!vitaProjectTecForm.do
	 */
	public String vitaProjectTecForm(){
		try{
			this.logger.info("vitaProjectTecForm()");
			if(this.vitaProjectTec.getProjectTecId()!=null){
				vitaProjectTec = this.vitaService.queryVitaProjectTecById(vitaProjectTec.getProjectTecId());				
				this.setOperate("update");
			}else{
				this.setOperate("save");
			}
			this.setForwardPage("/pages/vita/vitaProjectTecForm.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	
	/**
	 * 删除单个项目包含技术对象操作
	 * url:/vita/vita!deleteVitaProjectTecById.do?vitaProjectTec.projectTecId=xxx
	 */
	public String deleteVitaProjectTecById(){
		try{
			this.logger.info("deleteVitaProjectTecById()");
			this.vitaService.deleteVitaProjectTecById(vitaProjectTec.getProjectTecId());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 *  技能熟练度列表展示界面
	 *  url:/vita/vita!vitaTechnicalList.do
	 */
	public String vitaTechnicalList(){
		try{
			this.logger.info("vitaTechnicalList()");
			this.setForwardPage("/pages/vita/vitaTechnicalList.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * ajax获取技能熟练度列表数据
	 * url:/vita/vita!vitaTechnicalListGetDate.do
	 */
	public String vitaTechnicalListGetDate(){
		try{
			this.logger.info("vitaTechnicalListGetDate()");
			
			StringBuffer json = new StringBuffer();
			GsonBuilder builder = new GsonBuilder();
			//Gson gson = builder.setDateFormat("yyyy-MM-dd HH:mm:ss").create();
			Gson gson = builder.setDateFormat("yyyy-MM-dd").create();
			map.put("TEC_ID", this.getReq().getParameter("TEC_ID"));
			
			//
			map.put("VITA_ID", this.getReq().getParameter("VITA_ID"));
			//
			map.put("TEC_NAME", this.getReq().getParameter("TEC_NAME"));
			//
			map.put("BEGIN_TIME", this.getReq().getParameter("BEGIN_TIME"));
			//
			map.put("PROFICIENCY", this.getReq().getParameter("PROFICIENCY"));
			//
			map.put("IS_VALID", this.getReq().getParameter("IS_VALID"));
			//
			map.put("CREATE_TIME", this.getReq().getParameter("CREATE_TIME"));
			
			//排序
			map.put("sort",getReq().getParameter("sort"));	
			map.put("order",getReq().getParameter("order"));	
			
			List l = this.vitaService.queryVitaTechnical(this.map, this.p);
			
			String listStr = gson.toJson(l);
			json.append("{\"total\":" + p.getListSize() + ",\"rows\":");
			if(l==null || l.size() < 1){
				listStr = "[]";
			}
			json.append(listStr);
			json.append("}");
			
			this.setMsg(json.toString());
			return "ajax";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}

	/**
	 * 保存或更新技能熟练度提交操作
	 * url:/vita/vita!vitaTechnicalFormSubmit.do
	 */
	public String vitaTechnicalFormSubmit(){
		try{
			this.logger.info("vitaTechnicalEditSubmit()");
			if("save".equals(this.getOperate())){
				this.vitaService.saveVitaTechnical(this.vitaTechnical);
			}else{
				this.vitaService.updateVitaTechnical(this.vitaTechnical);
			}			
			this.setScriptContent("alert('操作成功');getParent().reloadVitaTechnicalDg();window.close()");
			return "msg";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * 新增/编辑技能熟练度界面
	 * url:/vita/vita!vitaTechnicalForm.do
	 */
	public String vitaTechnicalForm(){
		try{
			this.logger.info("vitaTechnicalForm()");
			if(this.vitaTechnical.getTecId()!=null){
				vitaTechnical = this.vitaService.queryVitaTechnicalById(vitaTechnical.getTecId());				
				this.setOperate("update");
			}else{
				this.setOperate("save");
			}
			this.setForwardPage("/pages/vita/vitaTechnicalForm.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	
	/**
	 * 删除单个技能熟练度对象操作
	 * url:/vita/vita!deleteVitaTechnicalById.do?vitaTechnical.tecId=xxx
	 */
	public String deleteVitaTechnicalById(){
		try{
			this.logger.info("deleteVitaTechnicalById()");
			this.vitaService.deleteVitaTechnicalById(vitaTechnical.getTecId());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 *  工作经历列表展示界面
	 *  url:/vita/vita!vitaWorkHisList.do
	 */
	public String vitaWorkHisList(){
		try{
			this.logger.info("vitaWorkHisList()");
			this.setForwardPage("/pages/vita/vitaWorkHisList.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * ajax获取工作经历列表数据
	 * url:/vita/vita!vitaWorkHisListGetDate.do
	 */
	public String vitaWorkHisListGetDate(){
		try{
			this.logger.info("vitaWorkHisListGetDate()");
			
			StringBuffer json = new StringBuffer();
			GsonBuilder builder = new GsonBuilder();
			//Gson gson = builder.setDateFormat("yyyy-MM-dd HH:mm:ss").create();
			Gson gson = builder.setDateFormat("yyyy-MM-dd").create();
			map.put("WORK_HIS_ID", this.getReq().getParameter("WORK_HIS_ID"));
			
			//
			map.put("VITA_ID", this.getReq().getParameter("VITA_ID"));
			//
			map.put("COMPANY_NAME", this.getReq().getParameter("COMPANY_NAME"));
			//
			map.put("BEGIN_DATE", this.getReq().getParameter("BEGIN_DATE"));
			//
			map.put("FINISH_DATE", this.getReq().getParameter("FINISH_DATE"));
			//
			map.put("COMPANY_SCALE", this.getReq().getParameter("COMPANY_SCALE"));
			//
			map.put("IS_VALID", this.getReq().getParameter("IS_VALID"));
			//
			map.put("CREATE_TIME", this.getReq().getParameter("CREATE_TIME"));
			
			//排序
			map.put("sort",getReq().getParameter("sort"));	
			map.put("order",getReq().getParameter("order"));	
			
			List l = this.vitaService.queryVitaWorkHis(this.map, this.p);
			
			String listStr = gson.toJson(l);
			json.append("{\"total\":" + p.getListSize() + ",\"rows\":");
			if(l==null || l.size() < 1){
				listStr = "[]";
			}
			json.append(listStr);
			json.append("}");
			
			this.setMsg(json.toString());
			return "ajax";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}

	/**
	 * 保存或更新工作经历提交操作
	 * url:/vita/vita!vitaWorkHisFormSubmit.do
	 */
	public String vitaWorkHisFormSubmit(){
		try{
			this.logger.info("vitaWorkHisEditSubmit()");
			if("save".equals(this.getOperate())){
				this.vitaService.saveVitaWorkHis(this.vitaWorkHis);
			}else{
				this.vitaService.updateVitaWorkHis(this.vitaWorkHis);
			}			
			this.setScriptContent("alert('操作成功');getParent().reloadVitaWorkHisDg();window.close()");
			return "msg";
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	/**
	 * 新增/编辑工作经历界面
	 * url:/vita/vita!vitaWorkHisForm.do
	 */
	public String vitaWorkHisForm(){
		try{
			this.logger.info("vitaWorkHisForm()");
			if(this.vitaWorkHis.getWorkHisId()!=null){
				vitaWorkHis = this.vitaService.queryVitaWorkHisById(vitaWorkHis.getWorkHisId());				
				this.setOperate("update");
			}else{
				this.setOperate("save");
			}
			this.setForwardPage("/pages/vita/vitaWorkHisForm.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	
	/**
	 * 删除单个工作经历对象操作
	 * url:/vita/vita!deleteVitaWorkHisById.do?vitaWorkHis.workHisId=xxx
	 */
	public String deleteVitaWorkHisById(){
		try{
			this.logger.info("deleteVitaWorkHisById()");
			this.vitaService.deleteVitaWorkHisById(vitaWorkHis.getWorkHisId());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	/**
	 * 批量删除项目经历对象操作
	 * url:/vita/vita!deleteVitaProjectDutyByIds.do?$ids=xxx
	 */
	public String deleteVitaProjectDutyByIds(){
		try{
			this.logger.info("deleteVitaProjectDutyByIds()");
			this.vitaService.deleteVitaProjectDutyByIds(this.getIds());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	
	
	/**
	 * 批量删除教育经历对象操作
	 * url:/vita/vita!deleteVitaEduHisByIds.do?$ids=xxx
	 */
	public String deleteVitaEduHisByIds(){
		try{
			this.logger.info("deleteVitaEduHisByIds()");
			this.vitaService.deleteVitaEduHisByIds(this.getIds());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 * 批量删除简历信息对象操作
	 * url:/vita/vita!deleteVitaInfoByIds.do?$ids=xxx
	 */
	public String deleteVitaInfoByIds(){
		try{
			this.logger.info("deleteVitaInfoByIds()");
			this.vitaService.deleteVitaInfoByIds(this.getIds());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 * 批量删除项目经历对象操作
	 * url:/vita/vita!deleteVitaProjectHisByIds.do?$ids=xxx
	 */
	public String deleteVitaProjectHisByIds(){
		try{
			this.logger.info("deleteVitaProjectHisByIds()");
			this.vitaService.deleteVitaProjectHisByIds(this.getIds());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 * 批量删除项目包含技术对象操作
	 * url:/vita/vita!deleteVitaProjectTecByIds.do?$ids=xxx
	 */
	public String deleteVitaProjectTecByIds(){
		try{
			this.logger.info("deleteVitaProjectTecByIds()");
			this.vitaService.deleteVitaProjectTecByIds(this.getIds());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}

	/**
	 * 批量删除技能熟练度对象操作
	 * url:/vita/vita!deleteVitaTechnicalByIds.do?$ids=xxx
	 */
	public String deleteVitaTechnicalByIds(){
		try{
			this.logger.info("deleteVitaTechnicalByIds()");
			this.vitaService.deleteVitaTechnicalByIds(this.getIds());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	/**
	 * 批量删除工作经历对象操作
	 * url:/vita/vita!deleteVitaWorkHisByIds.do?$ids=xxx
	 */
	public String deleteVitaWorkHisByIds(){
		try{
			this.logger.info("deleteVitaWorkHisByIds()");
			this.vitaService.deleteVitaWorkHisByIds(this.getIds());
			this.setMsg("success");
		}catch(Exception e){
			e.printStackTrace();
			this.setMsg(e.getMessage());
		}
		return "ajax";
	}
	
	public void setVitaWorkHis( VitaWorkHis vitaWorkHis) {
		this.vitaWorkHis = vitaWorkHis;
	}
	public VitaWorkHis getVitaWorkHis() {
		return vitaWorkHis;
	}
	
	public void setVitaTechnical( VitaTechnical vitaTechnical) {
		this.vitaTechnical = vitaTechnical;
	}
	public VitaTechnical getVitaTechnical() {
		return vitaTechnical;
	}
	public void setVitaProjectTec( VitaProjectTec vitaProjectTec) {
		this.vitaProjectTec = vitaProjectTec;
	}
	public VitaProjectTec getVitaProjectTec() {
		return vitaProjectTec;
	}
	public void setVitaProjectHis( VitaProjectHis vitaProjectHis) {
		this.vitaProjectHis = vitaProjectHis;
	}
	public VitaProjectHis getVitaProjectHis() {
		return vitaProjectHis;
	}
	public void setVitaInfo( VitaInfo vitaInfo) {
		this.vitaInfo = vitaInfo;
	}
	public VitaInfo getVitaInfo() {
		return vitaInfo;
	}
	public void setVitaEduHis( VitaEduHis vitaEduHis) {
		this.vitaEduHis = vitaEduHis;
	}
	public VitaEduHis getVitaEduHis() {
		return vitaEduHis;
	}
	public void setVitaProjectDuty( VitaProjectDuty vitaProjectDuty) {
		this.vitaProjectDuty = vitaProjectDuty;
	}
	public VitaProjectDuty getVitaProjectDuty() {
		return vitaProjectDuty;
	}
}
