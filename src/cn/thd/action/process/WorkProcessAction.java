package cn.thd.action.process;


import java.util.List;

import javax.annotation.Resource;

import org.activiti.engine.task.Task;

import cn.thd.bean.LoginUserInfo;
import cn.thd.bean.Option;
import cn.thd.bean.ProcessMethodBean;
import cn.thd.bean.ProcessStaticVar;
import cn.thd.bean.StaticVar;
import cn.thd.dto.AjaxReturnBean;
import cn.thd.pojo.process.SeProcTask;
import cn.thd.service.common.CommonService;
import cn.thd.service.process.SeProcessService;
import cn.thd.service.se.SeRequirementTraceService;
import cn.thd.service.se.SeService;
import cn.thd.service.sys.SysService;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.thd.core.action.PubAction;
import com.thd.util.MyActivitiUtil;
import com.thd.util.MyStringUtils;


/**
 * 流程相关
 * file autogenerated by ThirdteenDevils's CodeGenUtil 
 */
public class WorkProcessAction extends PubAction {
	@Resource
	private SeService seService;
	@Resource
	private SeRequirementTraceService seRequirementTraceService;
	@Resource
	private MyActivitiUtil myActivitiUtil;
	@Resource
	private SysService sysService;
	@Resource
	private CommonService commonService;
	@Resource
	private SeProcessService seProcessService;
	
	//待办ID
	private String taskId;
	//业务主键
	private String bkey;
	//jobno
	private String jobno;
	//流程实例ID
	private String procInsId;
	//流程发起人
	private String startUser;
	//任务流程
	private SeProcTask seProcTask = new SeProcTask();
	//流程操作人
	private String stepOperator ;
	//流程变量json字符串
	private String processVarStr;
	
	
	
	/**
	 * 任务流程-派工
	 * url : /workProcess/workProcess!workProcessAssign.do
	 * Method Description : ########
	 * @return
	 */
	public String workProcessAssign(){
		try{
			this.logger.info("taskProcessAssign()");
			
			this.initStaticVarObj();
			
			if(MyStringUtils.isEmpty(this.getJobno())){
				throw new Exception("未找到JOBNO");
			}
			
			
			LoginUserInfo loginUserInfo = sysService.getLoginUserInfoFromCookie(this.getReq());
			ProcessMethodBean pmb = new ProcessMethodBean();
			String stepCode = this.getReq().getParameter("stepCode");
			if(MyStringUtils.isEmpty(stepCode) || MyStringUtils.isEmpty(this.getJobno())){
				throw new Exception(" 为设置业务主键和步骤CODE ");
			}
			pmb.setJobno(this.getJobno());
			pmb.setStepCode(stepCode);
			pmb.setOperator(loginUserInfo.getSeUser().getUserId());
			//流程公共信息
			this.seProcessService.dealProcessMethodBean(pmb);
			this.getRequest().put("pmb", pmb);
			
			
			seProcTask = this.seProcessService.querySeProcTaskById(this.jobno);
			
			
			
			/*
			if(!this.seProcessService.cando(this.getTaskId(), lui.getUserId())){
				this.setUrl("/seProcess/seProcess!taskProcessInfo.do?jobno=" + this.getJobno());
				return "msg";
			}*/
			
			if(seProcTask == null){
				throw new Exception("未找到任务流程[" + this.jobno + "]");
			}
			
			
			
			if(MyStringUtils.isNotEmpty(seProcTask.getTaskId())){
				this.getRequest().put("traceTaskName", seService.querySeTraceTaskById(seProcTask.getTaskId()).getTaskTitle());
			}
			if(MyStringUtils.isNotEmpty(seProcTask.getProjectId())){
				this.getRequest().put("project", seService.querySeProjectInfoById(seProcTask.getProjectId()));
			}
			
			if(MyStringUtils.isNotEmpty(this.getTaskId())){
				Task t = this.myActivitiUtil.getTaskService().createTaskQuery().taskId(this.getTaskId()).singleResult();
				this.getRequest().put("task", t);
			}
			
			List<Option> userList = commonService.queryUserForOptionKV();
			this.getRequest().put("userList", userList);
			
			
			List projectList = seService.queryMyProject(loginUserInfo.getUserId());
			this.getRequest().put("projectList", projectList);
			
			
			
			this.getRequest().put("workprocessAssign", ProcessStaticVar.WORKPROCESS_ASSIGN);
			this.getRequest().put("workprocessExecute", ProcessStaticVar.WORKPROCESS_EXECUTE);
			this.getRequest().put("workprocessInspect", ProcessStaticVar.WORKPROCESS_INSPECT);
			this.getRequest().put("workprocessDecide", ProcessStaticVar.WORKPROCESS_DECIDE);
			
			//是否可编辑    如果参数是0则不可编辑否则根据各个流程实际情况查看是否可编辑
			String ce = this.getReq().getParameter("ce");
			if(StaticVar.Y.equals(ce) || MyStringUtils.isEmpty(ce)){
				ce = pmb.getHasAuth();
			}else{
				ce = StaticVar.N;
			}
			this.getRequest().put("ce", ce);
			
			this.setForwardPage("/pages/process/workProcessAssign.jsp");
			return this.SUCCESS;
		}catch(Exception e){
			e.printStackTrace();
			return this.err(e);
		}
	}
	
	
	/**
	 * 任务流程-派工
	 * url : /workProcess/workProcess!workProcessAssignSubmit.do
	 * Method Description : ########
	 * @return
	 */
	public String workProcessAssignSubmit(){
		GsonBuilder builder = new GsonBuilder();
		Gson gson = builder.setDateFormat("yyyy-MM-dd").create();
		AjaxReturnBean arb = new AjaxReturnBean();
		arb.setStatus(StaticVar.STATUS_FAILURE);
		try{
			this.logger.info("workProcessAssignSubmit()");
			
			if(MyStringUtils.isEmpty(seProcTask.getJobno())){
				throw new Exception("未找到JOBNO");
			}
			SeProcTask seProcTaskTemp = this.seProcessService.querySeProcTaskById(seProcTask.getJobno());
			
			if(seProcTaskTemp == null){
				throw new Exception("未找到任务流程[" + this.jobno + "]");
			}
			this.seProcessService.updateSeProcTaskForBusiness(this.seProcTask);
			arb.setStatus(StaticVar.STATUS_SUCCESS);
		}catch(Exception e){
			e.printStackTrace();
			arb.setMessage(e.getMessage());
			
		}
		this.setMsg(gson.toJson(arb));
		return "ajax";
	}
	
	public String getTaskId() {
		return taskId;
	}
	public void setTaskId(String taskId) {
		this.taskId = taskId;
	}
	public String getBkey() {
		return bkey;
	}
	public void setBkey(String bkey) {
		this.bkey = bkey;
	}
	public SeProcTask getSeProcTask() {
		return seProcTask;
	}
	public void setSeProcTask(SeProcTask seProcTask) {
		this.seProcTask = seProcTask;
	}
	public String getJobno() {
		return jobno;
	}
	public void setJobno(String jobno) {
		this.jobno = jobno;
	}
	public String getProcInsId() {
		return procInsId;
	}
	public void setProcInsId(String procInsId) {
		this.procInsId = procInsId;
	}


	public String getStepOperator() {
		return stepOperator;
	}


	public void setStepOperator(String stepOperator) {
		this.stepOperator = stepOperator;
	}


	public String getProcessVarStr() {
		return processVarStr;
	}


	public void setProcessVarStr(String processVarStr) {
		this.processVarStr = processVarStr;
	}

	public String getStartUser() {
		return startUser;
	}


	public void setStartUser(String startUser) {
		this.startUser = startUser;
	}

	
}
